version: '3.8'

services:
    postgres:
        image: postgres:latest
        env_file: .env
        environment:
            POSTGRES_DB: ${DB_DATABASE}
            POSTGRES_USER: ${DB_USERNAME}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
        ports:
            - ${DB_FORWARD_PORT:-5432}:${DB_PORT:-5432}
        volumes:
            - postgres_data:/var/lib/postgresql/data
        networks:
            - bridge
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_DATABASE}"]
            interval: 5s
            timeout: 5s
            retries: 5

    app:
        build:
            context: .
            dockerfile: docker/app/Dockerfile
        env_file: .env
        ports:
            - ${APP_FORWARD_PORT:-8000}:${APP_PORT:-80}
        volumes:
            - .:/var/www/html
        depends_on:
            redis:
                condition: service_healthy
            postgres:
                condition: service_healthy
        networks:
            - bridge

    redis:
        image: redis:7-alpine
        restart: unless-stopped
        command: redis-server --appendonly yes --requirepass "${REDIS_PASSWORD}"
        ports:
            - "${FORWARD_REDIS_PORT:-6379}:${REDIS_PORT:-6379}"
        volumes:
            - redis_data:/data
        networks:
            - bridge
        healthcheck:
            test: redis-cli -h redis -p 6379 ping
            start_period: 3s
            interval: 2s
            timeout: 2s
            retries: 10

volumes:
    postgres_data:
    redis_data:

networks:
    bridge:
        driver: bridge
